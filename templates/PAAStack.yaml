Parameters:
  validityInDays:
    Type: Number
    Default: 3650
    Description: Validity in days for new PAA
  validityEndDate:
    Type: String
    Default: ""
    Description: Validity End Date, is optional and overrides validityInDays. It's in YYYYMMDDHHMMSS format.
  vendorId:
    Type: String
    Description: The vendorId associated with this PAA. This must be a 4-digit hex value.
  paaCommonName:
    Type: String
    Description: The Common Name for this PAA.
  paaOrganization:
    Type: String
    Description: The Organization associated with this PAA.
  paaOU:
    Type: String
    Default: ""
    Description: The Organizational Unit associated with this PAA.
  crlBucketName:
    Type: String
    Default: matter-crl-paa-bucket
    Description: The CRL Bucket Name for this PAA
Resources:
  CustomLambdaFunctionUtilsCustomResourceProviderRole8D839507:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  CustomLambdaFunctionUtilsCustomResourceProviderHandler6BCB6537:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: ${AWS::AccountId}-matter-cfn-deployment-assets
        S3Key: LambdaFunctionUtils.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomLambdaFunctionUtilsCustomResourceProviderRole8D839507
          - Arn
      Runtime: nodejs18.x
      Description: Utility Lambda function
    DependsOn:
      - CustomLambdaFunctionUtilsCustomResourceProviderRole8D839507
  ValidateVid:
    Type: Custom::ValidateVidType
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomLambdaFunctionUtilsCustomResourceProviderHandler6BCB6537
          - Arn
      command: validateVidPid
      vid:
        Ref: vendorId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  mattercrlpaabucket48E65E17:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName:
        Ref: crlBucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: false
        IgnorePublicAcls: true
        RestrictPublicBuckets: false
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: "true"
        - Key: matterPKITag
          Value: ""
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  mattercrlpaabucketPolicyA85D80D7:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: mattercrlpaabucket48E65E17
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - mattercrlpaabucket48E65E17
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - mattercrlpaabucket48E65E17
                        - Arn
                    - /*
          - Action:
              - s3:DeleteObject*
              - s3:GetBucket*
              - s3:List*
              - s3:PutBucketPolicy
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - mattercrlpaabucket48E65E17
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - mattercrlpaabucket48E65E17
                        - Arn
                    - /*
          - Action: s3:GetObject
            Effect: Allow
            Principal:
              AWS: "*"
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - mattercrlpaabucket48E65E17
                      - Arn
                  - /crl/*
          - Action:
              - s3:GetBucketAcl
              - s3:GetBucketLocation
              - s3:PutObject
              - s3:PutObjectAcl
            Effect: Allow
            Principal:
              Service: acm-pca.amazonaws.com
            Resource:
              - Fn::GetAtt:
                  - mattercrlpaabucket48E65E17
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - mattercrlpaabucket48E65E17
                        - Arn
                    - /*
        Version: "2012-10-17"
  mattercrlpaabucketAutoDeleteObjectsCustomResource0B8E184A:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: mattercrlpaabucket48E65E17
    DependsOn:
      - mattercrlpaabucketPolicyA85D80D7
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Fn::Sub: cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}
        S3Key: b7f33614a69548d6bafe224d751a7ef238cde19097415e553fe8b63a4c8fd8a6.zip
      Timeout: 900
      MemorySize: 128
      Handler: index.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs18.x
      Description:
        Fn::Join:
          - ""
          - - "Lambda function for auto-deleting objects in "
            - Ref: mattercrlpaabucket48E65E17
            - " S3 bucket."
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
  CAPAA:
    Type: AWS::ACMPCA::CertificateAuthority
    Properties:
      KeyAlgorithm: EC_prime256v1
      KeyStorageSecurityStandard: FIPS_140_2_LEVEL_3_OR_HIGHER
      RevocationConfiguration:
        CrlConfiguration:
          CrlDistributionPointExtensionConfiguration:
            OmitExtension: true
          Enabled: true
          ExpirationInDays: 90
          S3BucketName:
            Ref: mattercrlpaabucket48E65E17
          S3ObjectAcl: BUCKET_OWNER_FULL_CONTROL
      SigningAlgorithm: SHA256WITHECDSA
      Subject:
        CustomAttributes:
          Fn::If:
            - OrgUnitWasProvided
            - - ObjectIdentifier: 2.5.4.3
                Value:
                  Ref: paaCommonName
              - ObjectIdentifier: 1.3.6.1.4.1.37244.2.1
                Value:
                  Fn::GetAtt:
                    - ValidateVid
                    - vid
              - ObjectIdentifier: 2.5.4.10
                Value:
                  Ref: paaOrganization
              - ObjectIdentifier: 2.5.4.11
                Value:
                  Ref: paaOU
            - - ObjectIdentifier: 2.5.4.3
                Value:
                  Ref: paaCommonName
              - ObjectIdentifier: 1.3.6.1.4.1.37244.2.1
                Value:
                  Fn::GetAtt:
                    - ValidateVid
                    - vid
              - ObjectIdentifier: 2.5.4.10
                Value:
                  Ref: paaOrganization
      Tags:
        - Key: matterCAType
          Value: paa
        - Key: matterPKITag
          Value: ""
      Type: ROOT
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  CertPAA:
    Type: AWS::ACMPCA::Certificate
    Properties:
      CertificateAuthorityArn:
        Fn::GetAtt:
          - CAPAA
          - Arn
      CertificateSigningRequest:
        Fn::GetAtt:
          - CAPAA
          - CertificateSigningRequest
      SigningAlgorithm: SHA256WITHECDSA
      TemplateArn: arn:aws:acm-pca:::template/RootCACertificate_APIPassthrough/V1
      Validity:
        Fn::If:
          - ValidityEndDateWasProvided
          - Type: END_DATE
            Value:
              Ref: validityEndDate
          - Type: DAYS
            Value:
              Ref: validityInDays
  CertActivationPAA:
    Type: AWS::ACMPCA::CertificateAuthorityActivation
    Properties:
      Certificate:
        Fn::GetAtt:
          - CertPAA
          - Certificate
      CertificateAuthorityArn:
        Fn::GetAtt:
          - CAPAA
          - Arn
      Status: ACTIVE
  MatterManagePAARole206A10AF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
      Path: /MatterPKI/
      RoleName: MatterManagePAARole
      Tags:
        - Key: matterPKITag
          Value: ""
  MatterPAAD2AC60DA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - acm-pca:DescribeCertificateAuthority
              - acm-pca:GetCertificate
              - acm-pca:GetCertificateAuthorityCertificate
              - acm-pca:UpdateCertificateAuthority
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CAPAA
                - Arn
          - Action: acm-pca:ListCertificateAuthorities
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: MatterPAAD2AC60DA
      Roles:
        - Ref: MatterManagePAARole206A10AF
  MatterIssuePAIRole9F2B04D3:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
      Path: /MatterPKI/
      RoleName: MatterIssuePAIRole
      Tags:
        - Key: matterPKITag
          Value: ""
  IssuePAICertEBF36D03:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: acm-pca:IssueCertificate
            Condition:
              StringLike:
                acm-pca:TemplateArn: arn:aws:acm-pca:::template/BlankSubordinateCACertificate_PathLen0_APIPassthrough/V*
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CAPAA
                - Arn
          - Action: acm-pca:IssueCertificate
            Condition:
              StringNotLike:
                acm-pca:TemplateArn: arn:aws:acm-pca:::template/BlankSubordinateCACertificate_PathLen0_APIPassthrough/V*
            Effect: Deny
            Resource:
              Fn::GetAtt:
                - CAPAA
                - Arn
          - Action:
              - acm-pca:DeleteCertificateAuthority
              - acm-pca:DescribeCertificateAuthority
              - acm-pca:GetCertificateAuthorityCertificate
              - acm-pca:GetCertificateAuthorityCsr
              - acm-pca:ImportCertificateAuthorityCertificate
              - acm-pca:UpdateCertificateAuthority
            Condition:
              StringEquals:
                aws:ResourceTag/matterCAType: pai
            Effect: Allow
            Resource: "*"
          - Action:
              - acm-pca:DescribeCertificateAuthority
              - acm-pca:GetCertificate
              - acm-pca:GetCertificateAuthorityCertificate
              - acm-pca:RevokeCertificate
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CAPAA
                - Arn
          - Action:
              - acm-pca:CreateCertificateAuthority
              - acm-pca:ListCertificateAuthorities
              - acm-pca:TagCertificateAuthority
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: IssuePAICertEBF36D03
      Roles:
        - Ref: MatterIssuePAIRole9F2B04D3
  MatterAuditorRole03712E04:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
      Path: /MatterPKI/
      RoleName: MatterAuditorRole
      Tags:
        - Key: matterPKITag
          Value: ""
  MatterAuditorRoleDefaultPolicy27A0C339:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:Describe*
              - logs:FilterLogEvents
              - logs:Get*
              - logs:List*
              - logs:StartQuery
              - logs:StopQuery
              - logs:TestMetricFilter
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - MatterAudit3BAC79D2
                - Arn
        Version: "2012-10-17"
      PolicyName: MatterAuditorRoleDefaultPolicy27A0C339
      Roles:
        - Ref: MatterAuditorRole03712E04
  MatterAuditorD8BE1FAA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - acm-pca:CreateCertificateAuthorityAuditReport
              - acm-pca:DescribeCertificateAuthority
              - acm-pca:DescribeCertificateAuthorityAuditReport
              - acm-pca:GetCertificate
              - acm-pca:GetCertificateAuthorityCertificate
              - acm-pca:GetCertificateAuthorityCsr
              - acm-pca:GetPolicy
              - acm-pca:ListPermissions
              - acm-pca:ListTags
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - CAPAA
                - Arn
          - Action:
              - acm-pca:CreateCertificateAuthorityAuditReport
              - acm-pca:DescribeCertificateAuthority
              - acm-pca:DescribeCertificateAuthorityAuditReport
              - acm-pca:GetCertificate
              - acm-pca:GetCertificateAuthorityCertificate
              - acm-pca:GetCertificateAuthorityCsr
              - acm-pca:GetPolicy
              - acm-pca:ListPermissions
              - acm-pca:ListTags
            Condition:
              StringEquals:
                aws:ResourceTag/matterCAType: pai
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: MatterAuditorD8BE1FAA
      Roles:
        - Ref: MatterAuditorRole03712E04
  S3BackupRole5A829B6E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: backup.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSBackupServiceRolePolicyForRestores
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AWSBackupServiceRolePolicyForS3Backup
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/AWSBackupServiceRolePolicyForS3Restore
      Path: /MatterPKI/
      RoleName: S3BackupRole
  MatterIssueDACRoleD87F8C18:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
        Version: "2012-10-17"
      Path: /MatterPKI/
      RoleName: MatterIssueDACRole
      Tags:
        - Key: matterPKITag
          Value: ""
  IssueDACCertC12F3700:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: acm-pca:IssueCertificate
            Condition:
              StringLike:
                acm-pca:TemplateArn: arn:aws:acm-pca:::template/BlankEndEntityCertificate_CriticalBasicConstraints_APIPassthrough/V*
              StringEquals:
                aws:ResourceTag/matterCAType: pai
            Effect: Allow
            Resource: "*"
          - Action: acm-pca:IssueCertificate
            Condition:
              StringNotLike:
                acm-pca:TemplateArn: arn:aws:acm-pca:::template/BlankEndEntityCertificate_CriticalBasicConstraints_APIPassthrough/V*
              StringEquals:
                aws:ResourceTag/matterCAType: pai
            Effect: Deny
            Resource: "*"
          - Action:
              - acm-pca:DescribeCertificateAuthority
              - acm-pca:GetCertificate
              - acm-pca:GetCertificateAuthorityCertificate
              - acm-pca:RevokeCertificate
            Condition:
              StringEquals:
                aws:ResourceTag/matterCAType: pai
            Effect: Allow
            Resource: "*"
          - Action: acm-pca:ListCertificateAuthorities
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: IssueDACCertC12F3700
      Roles:
        - Ref: MatterIssueDACRoleD87F8C18
  MatterAuditLoggingBackupPlanE7841230:
    Type: AWS::Backup::BackupPlan
    Properties:
      BackupPlan:
        BackupPlanName: MatterAuditLoggingBackupPlan
        BackupPlanRule:
          - Lifecycle:
              DeleteAfterDays: 32
            RuleName: RuleForMonthlyBackups
            ScheduleExpression: cron(0 0 1 * ? *)
            TargetBackupVault:
              Fn::GetAtt:
                - MatterAuditLoggingBackupVault52FF6D37
                - BackupVaultName
  MatterAuditLoggingBackupPlanS3BackupSelection72BC7F41:
    Type: AWS::Backup::BackupSelection
    Properties:
      BackupPlanId:
        Fn::GetAtt:
          - MatterAuditLoggingBackupPlanE7841230
          - BackupPlanId
      BackupSelection:
        IamRoleArn:
          Fn::GetAtt:
            - S3BackupRole5A829B6E
            - Arn
        Resources:
          - Fn::GetAtt:
              - matterpkiauditlogsB56DAB62
              - Arn
        SelectionName: S3BackupSelection
  MatterAuditLoggingBackupVault52FF6D37:
    Type: AWS::Backup::BackupVault
    Properties:
      BackupVaultName: MatterAuditLoggingBackupVault
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  MatterPKIAuditLogsKMSKey8EB68491:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Statement:
          - Action: kms:*
            Effect: Allow
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:"
                    - Ref: AWS::Partition
                    - ":iam::"
                    - Ref: AWS::AccountId
                    - :root
            Resource: "*"
          - Action:
              - kms:Encrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Resource: "*"
          - Action:
              - kms:Decrypt
              - kms:DescribeKey
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - MatterAuditorRole03712E04
                  - Arn
            Resource: "*"
        Version: "2012-10-17"
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  matterpkiauditlogsB56DAB62:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID:
                Fn::GetAtt:
                  - MatterPKIAuditLogsKMSKey8EB68491
                  - Arn
              SSEAlgorithm: aws:kms
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 1827
            Id: MatterAuditLogsArchivingToGlacier
            Status: Enabled
            Transitions:
              - StorageClass: GLACIER
                TransitionInDays: 60
      ObjectLockConfiguration:
        ObjectLockEnabled: Enabled
        Rule:
          DefaultRetention:
            Mode: GOVERNANCE
            Days: 1827
      ObjectLockEnabled: true
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: true
        IgnorePublicAcls: false
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  matterpkiauditlogsPolicyB878ED00:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: matterpkiauditlogsB56DAB62
      PolicyDocument:
        Statement:
          - Action: s3:*
            Condition:
              Bool:
                aws:SecureTransport: "false"
            Effect: Deny
            Principal:
              AWS: "*"
            Resource:
              - Fn::GetAtt:
                  - matterpkiauditlogsB56DAB62
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - matterpkiauditlogsB56DAB62
                        - Arn
                    - /*
          - Action:
              - s3:GetBucket*
              - s3:GetObject*
              - s3:List*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - MatterAuditorRole03712E04
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - matterpkiauditlogsB56DAB62
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - matterpkiauditlogsB56DAB62
                        - Arn
                    - /*
          - Action: s3:GetBucketAcl
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Resource:
              Fn::GetAtt:
                - matterpkiauditlogsB56DAB62
                - Arn
          - Action: s3:PutObject
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Resource:
              Fn::Join:
                - ""
                - - Fn::GetAtt:
                      - matterpkiauditlogsB56DAB62
                      - Arn
                  - /AWSLogs/
                  - Ref: AWS::AccountId
                  - /*
        Version: "2012-10-17"
  MatterAudit3BAC79D2:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: MatterAudit
      RetentionInDays: 60
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
  AllPCAEventsFilterE7C3AA2E:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: '{ ($.eventSource = "acm-pca.amazonaws.com") }'
      LogGroupName:
        Ref: MatterAudit3BAC79D2
      MetricTransformations:
        - MetricName: AllPCAEventsFilter
          MetricNamespace: CloudTrail
          MetricValue: "1"
  MatterAuditLoggingBucketFilterE3E26940:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern:
        Fn::Join:
          - ""
          - - '{ ($.eventSource= "s3.amazonaws.com") && ($.requestParameters.bucketName = "'
            - Ref: matterpkiauditlogsB56DAB62
            - '*") }'
      LogGroupName:
        Ref: MatterAudit3BAC79D2
      MetricTransformations:
        - MetricName: MatterAuditLoggingBucketFilter
          MetricNamespace: CloudTrail
          MetricValue: "1"
  MatterTaggedFilterE39C37A6:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: matterPKITag
      LogGroupName:
        Ref: MatterAudit3BAC79D2
      MetricTransformations:
        - MetricName: MatterTaggedFilter
          MetricNamespace: CloudTrail
          MetricValue: "1"
  MatterPAARoleFilter44C49326:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern:
        Fn::Join:
          - ""
          - - "iam.amazonaws.com "
            - Ref: MatterManagePAARole206A10AF
      LogGroupName:
        Ref: MatterAudit3BAC79D2
      MetricTransformations:
        - MetricName: MatterPAARoleFilter
          MetricNamespace: CloudTrail
          MetricValue: "1"
  MatterPAIRoleFilter61075128:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern:
        Fn::Join:
          - ""
          - - "iam.amazonaws.com "
            - Ref: MatterIssuePAIRole9F2B04D3
      LogGroupName:
        Ref: MatterAudit3BAC79D2
      MetricTransformations:
        - MetricName: MatterPAIRoleFilter
          MetricNamespace: CloudTrail
          MetricValue: "1"
  MatterAuditorRoleFilter23F9E901:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern:
        Fn::Join:
          - ""
          - - "iam.amazonaws.com "
            - Ref: MatterAuditorRole03712E04
      LogGroupName:
        Ref: MatterAudit3BAC79D2
      MetricTransformations:
        - MetricName: MatterAuditorRoleFilter
          MetricNamespace: CloudTrail
          MetricValue: "1"
  MatterAuditLoggingBackupRoleFilter082062E4:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern:
        Fn::Join:
          - ""
          - - "iam.amazonaws.com "
            - Ref: S3BackupRole5A829B6E
      LogGroupName:
        Ref: MatterAudit3BAC79D2
      MetricTransformations:
        - MetricName: MatterAuditLoggingBackupRoleFilter
          MetricNamespace: CloudTrail
          MetricValue: "1"
  MatterAuditLoggingBackupPlanFilter4DD6905B:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern:
        Fn::Join:
          - ""
          - - "backup.amazonaws.com "
            - Fn::GetAtt:
                - MatterAuditLoggingBackupPlanE7841230
                - BackupPlanId
      LogGroupName:
        Ref: MatterAudit3BAC79D2
      MetricTransformations:
        - MetricName: MatterAuditLoggingBackupPlanFilter
          MetricNamespace: CloudTrail
          MetricValue: "1"
  MatterAuditTrailLogsRoleA5220186:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
        Version: "2012-10-17"
  MatterAuditTrailLogsRoleDefaultPolicy5D8B82A7:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - MatterAudit3BAC79D2
                - Arn
        Version: "2012-10-17"
      PolicyName: MatterAuditTrailLogsRoleDefaultPolicy5D8B82A7
      Roles:
        - Ref: MatterAuditTrailLogsRoleA5220186
  MatterAuditTrail535B0DA6:
    Type: AWS::CloudTrail::Trail
    Properties:
      CloudWatchLogsLogGroupArn:
        Fn::GetAtt:
          - MatterAudit3BAC79D2
          - Arn
      CloudWatchLogsRoleArn:
        Fn::GetAtt:
          - MatterAuditTrailLogsRoleA5220186
          - Arn
      EnableLogFileValidation: true
      EventSelectors:
        - DataResources:
            - Type: AWS::S3::Object
              Values:
                - Fn::Join:
                    - ""
                    - - Fn::GetAtt:
                          - matterpkiauditlogsB56DAB62
                          - Arn
                      - /
      IncludeGlobalServiceEvents: true
      IsLogging: true
      IsMultiRegionTrail: true
      KMSKeyId:
        Fn::GetAtt:
          - MatterPKIAuditLogsKMSKey8EB68491
          - Arn
      S3BucketName:
        Ref: matterpkiauditlogsB56DAB62
    DependsOn:
      - matterpkiauditlogsPolicyB878ED00
      - MatterAuditTrailLogsRoleDefaultPolicy5D8B82A7
      - MatterAuditTrailLogsRoleA5220186
Outputs:
  CrlBucketUrl:
    Description: The url of the S3 Bucket used for storing CRLs
    Value:
      Fn::GetAtt:
        - mattercrlpaabucket48E65E17
        - WebsiteURL
  PAACertArn:
    Description: The ARN of the PAA certificate
    Value:
      Fn::GetAtt:
        - CertPAA
        - Arn
  PAACertLink:
    Description: The link to the PAA certificate in the AWS Private CA console
    Value:
      Fn::Join:
        - ""
        - - https://console.aws.amazon.com/acm-pca/home?region=
          - Ref: AWS::Region
          - "#/details?arn="
          - Fn::GetAtt:
              - CAPAA
              - Arn
          - "&tab=certificate"
  PAA:
    Description: The ARN of the PAA
    Value:
      Fn::Join:
        - ""
        - - VID=
          - Fn::GetAtt:
              - ValidateVid
              - vid
          - " CN="
          - Ref: paaCommonName
          - " "
          - Fn::GetAtt:
              - CAPAA
              - Arn
  LogGroupName:
    Description: The name of the CloudWatch LogGroup
    Value:
      Ref: MatterAudit3BAC79D2
  CloudTrailArn:
    Description: The ARN of the CloudTrail
    Value:
      Fn::GetAtt:
        - MatterAuditTrail535B0DA6
        - Arn
Conditions:
  ValidityEndDateWasProvided:
    Fn::Not:
      - Fn::Equals:
          - Ref: validityEndDate
          - ""
  OrgUnitWasProvided:
    Fn::Not:
      - Fn::Equals:
          - Ref: paaOU
          - ""
